{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SADHIYA SAKEER\\\\New folder (7)\\\\wholesaler-phase1\\\\frontend\\\\src\\\\Pages\\\\inventory\\\\filters.js\",\n  _s = $RefreshSig$();\nimport '../../Styles/Inventory.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filters({\n  onFilterChange\n}) {\n  _s();\n  const [suppliers, setSuppliers] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({\n    search: '',\n    supplier_id: 'all',\n    category_id: 'all'\n  });\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const s = await axios.get('http://localhost:8000/api/suppliers/');\n        setSuppliers(s.data);\n      } catch {}\n      try {\n        const c = await axios.get('http://localhost:8000/api/categories/');\n        setCategories(c.data);\n      } catch {}\n    };\n    load();\n  }, []);\n  const update = (key, value) => {\n    const next = {\n      ...filters,\n      [key]: value\n    };\n    setFilters(next);\n    onFilterChange && onFilterChange(next);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory-filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search products...\",\n      value: filters.search,\n      onChange: e => update('search', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: filters.supplier_id,\n      onChange: e => update('supplier_id', e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All Suppliers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), suppliers.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: s.id,\n        children: s.name\n      }, s.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: filters.category_id,\n      onChange: e => update('category_id', e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: c.id,\n        children: c.name\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Filters, \"Zj6z8W4nJf516jQFqdPVTwQIKXk=\");\n_c = Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Filters","onFilterChange","_s","suppliers","setSuppliers","categories","setCategories","filters","setFilters","search","supplier_id","category_id","load","s","get","data","c","update","key","value","next","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","id","name","_c","$RefreshReg$"],"sources":["C:/Users/SADHIYA SAKEER/New folder (7)/wholesaler-phase1/frontend/src/Pages/inventory/filters.js"],"sourcesContent":["import '../../Styles/Inventory.css'\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function Filters({ onFilterChange }){\n    const [suppliers, setSuppliers] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [filters, setFilters] = useState({\n        search: '',\n        supplier_id: 'all',\n        category_id: 'all'\n    });\n\n    useEffect(() => {\n        const load = async () => {\n            try { const s = await axios.get('http://localhost:8000/api/suppliers/'); setSuppliers(s.data); } catch {}\n            try { const c = await axios.get('http://localhost:8000/api/categories/'); setCategories(c.data); } catch {}\n        };\n        load();\n    }, []);\n\n    const update = (key, value) => {\n        const next = { ...filters, [key]: value };\n        setFilters(next);\n        onFilterChange && onFilterChange(next);\n    };\n\n    return(\n        <div className=\"inventory-filters\">\n            <input type=\"text\" placeholder=\"Search products...\" value={filters.search} onChange={(e)=> update('search', e.target.value)} />\n            <select value={filters.supplier_id} onChange={(e)=> update('supplier_id', e.target.value)}>\n                <option value=\"all\">All Suppliers</option>\n                {suppliers.map(s => (<option key={s.id} value={s.id}>{s.name}</option>))}\n            </select>\n            <select value={filters.category_id} onChange={(e)=> update('category_id', e.target.value)}>\n                <option value=\"all\">All Categories</option>\n                {categories.map(c => (<option key={c.id} value={c.id}>{c.name}</option>))}\n            </select>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}